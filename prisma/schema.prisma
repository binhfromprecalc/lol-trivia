// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Lobby {
  id        String   @id @default(uuid())
  code      String   @unique
  started   Boolean  @default(false)

  // One-to-many: A lobby can have many players
  players   Player[]
}

model Player {
  id              String   @id @default(uuid())
  gameName        String
  tagLine         String
  riotId          String   @unique
  puuid           String?  
  region          String?  
  rank            String?  
  winrate         Float?   // Win rate percentage
  mostKills       Int?     // Highest kills in last 20 games
  mostDeaths      Int?     // Highest deaths in last 20 games

  profileIconId   Int?     // The summoner's profile icon ID
  summonerLevel   Int?     // The player's summoner level

  lobbyId         String?
  lobby           Lobby?    @relation(fields: [lobbyId], references: [id])

  championMasteries ChampionMastery[]

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}


model ChampionMastery {
  id          String  @id @default(uuid())
  championId  Int
  points      Int

  // Relation back to the player
  playerId    String
  player      Player  @relation(fields: [playerId], references: [id])
}
